{"version":3,"sources":["components/Home.tsx","components/NotFoundPage.tsx","components/PersonRow.tsx","components/InputFilter.tsx","components/PeopleTable.tsx","components/api.ts","App.tsx","index.tsx"],"names":["Home","NotFoundPage","PersonRow","people","history","useHistory","personName","useParams","map","person","className","cn","personRow__active","slug","key","id","onClick","push","pathname","person__woman","sex","person__man","name","born","died","notFount","mother","father","InputFilter","location","useLocation","searchParams","URLSearchParams","search","query","get","useState","currentQuery","setCurrentQuery","searchQueryWithDebounce","useCallback","debounce","useEffect","type","placeholder","value","onChange","event","target","set","toString","PeopleTable","setPeople","useMemo","sortBy","sortOrder","fetch","then","res","json","i","fatherName","motherName","preparedPeople","peopleArr","pattern","RegExp","filter","test","filterPeople","sort","a","b","localeCompare","reverse","item","column","App","to","exact","activeClassName","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"kPAEaA,G,MAAO,kBAClB,2CCDWC,EAAe,kBAC1B,+C,gCCKWC,EAA6B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrCC,EAAUC,cACRC,EAAeC,cAAfD,WAER,OACE,oCACGH,EAAOK,KAAI,SAAAC,GAAM,OAChB,wBACEC,UAAWC,IAAG,YAAa,CACzBC,kBAAmBH,EAAOI,OAASP,IAErCQ,IAAKL,EAAOM,GACZC,QAAS,WACPZ,EAAQa,KAAK,CACXC,SAAS,WAAD,OAAaT,EAAOI,UAIhC,wBACEH,UAAWC,IAAG,CACZQ,cAA8B,MAAfV,EAAOW,IACtBC,YAA4B,MAAfZ,EAAOW,OAGrBX,EAAOa,MAEV,4BAAKb,EAAOW,KACZ,4BAAKX,EAAOc,MACZ,4BAAKd,EAAOe,MACZ,wBACEd,UAAWC,IACT,iBAAkB,CAChBc,SAA4B,cAAlBhB,EAAOiB,UAIpBjB,EAAOiB,QAEV,wBACEhB,UAAWC,IACT,iBAAkB,CAChBc,SAA4B,cAAlBhB,EAAOkB,UAIpBlB,EAAOkB,c,iBCjDPC,EAAc,WACzB,IAAMxB,EAAUC,cACVwB,EAAWC,cAEXC,EAAe,IAAIC,gBAAgBH,EAASI,QAC5CC,EAAgBH,EAAaI,IAAI,UAAY,GALpB,EAMSC,mBAAiBF,GAN1B,mBAMxBG,EANwB,KAMVC,EANU,KAQzBC,EAA0BC,sBAAYC,IAASrC,EAAQa,KAAM,KAAM,IAczE,OAJAyB,qBAAU,WACRJ,EAAgBJ,KACf,CAACA,IAGF,oCACE,2BACExB,UAAU,eACViC,KAAK,OACLC,YAAY,+CACZC,MAAOR,EACPS,SAnBqB,SAACC,GAC1BT,EAAgBS,EAAMC,OAAOH,OAC7Bd,EAAakB,IAAI,QAASF,EAAMC,OAAOH,OACvCN,EAAwB,CACtBN,OAAQF,EAAamB,kBCPdC,EAA+B,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,EAChCO,mBAAmB,IADa,mBACrDjC,EADqD,KAC7CiD,EAD6C,KAItDhD,EAAUC,cACV0B,EAAe,IAAIC,gBAAgBH,EAASI,QAC5CC,EAAQmB,mBAAQ,kBAAMtB,EAAaI,IAAI,WAAU,CAACJ,KAAkB,GACpEuB,EAASD,mBAAQ,kBAAMtB,EAAaI,IAAI,YAAW,CAACJ,KAAiB,GACrEwB,EAAYF,mBAAQ,kBAAMtB,EAAaI,IAAI,eAAc,CAACJ,KAAiB,GAUjFW,qBAAU,WC1BHc,MAHO,qEAIXC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UD0BLF,MAAK,SAAAC,GAAG,OAAIN,EACtBM,EAAIlD,KAAI,SAACC,EAAQmD,GAAT,mBAAC,eACJnD,GADG,IAENM,GAAI6C,EAAI,EACRjC,OAAQlB,EAAOoD,WAAapD,EAAOoD,WAAa,YAChDnC,OAAQjB,EAAOqD,WAAarD,EAAOqD,WAAa,uBAGnD,IAEH,IAQMC,EAAiBV,mBAAQ,kBARV,SAACW,GACpB,IAAMC,EAAU,IAAIC,OAAOhC,EAAO,KAElC,OAAO8B,EACJG,QAAO,SAAA1D,GAAM,OAAIwD,EAAQG,KAAK3D,EAAOa,KAAOb,EAAOqD,WAAarD,EAAOoD,eAIvCQ,CAAalE,KAAS,CAACA,EAAQ+B,IAEpEmB,mBAAQ,WACN,OAAQC,GACN,IAAK,OACL,IAAK,OACHS,EAAeO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEjB,GAAUkB,EAAElB,MAC5C,MACF,IAAK,OACL,IAAK,MACHS,EAAeO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEjB,GAAQmB,cAAcD,EAAElB,UAK9D,CAACS,EAAgBT,EAAQC,IAuBzB,OALAF,mBAAQ,WACN,MAAqB,SAAdE,EAAuBQ,EAAeW,UAAYX,IAE3D,CAACA,EAAgBR,IAGf,oCACE,4CACA,kBAAC,EAAD,MACA,2BAAO7C,UAAU,eACf,2BAAOA,UAAU,iBACf,4BAxEW,CACjB,OACA,MACA,OACA,OACA,SACA,UAmEoBF,KAAI,SAAAmE,GAAI,OAClB,wBACE7D,IAAK6D,EACL3D,QAAS,WA9BE,IAAC4D,EACT,YADSA,EA8BoBD,IA7BN,WAAXC,IACrBtB,IAAWsB,GAAwB,QAAdrB,EACvBxB,EAAakB,IAAI,YAAa,QAE9BlB,EAAakB,IAAI,YAAa,OAGhClB,EAAakB,IAAI,SAAU2B,GAC3BxE,EAAQa,KAAK,CACXgB,OAAQF,EAAamB,gBAsBZyB,EACAA,IAASrB,GAAU,UAK5B,+BACE,kBAAC,EAAD,CAAWnD,OAAQ4D,QE9Cdc,EA/CO,WACpB,OACE,oCACE,gCACE,yBAAKnE,UAAU,OACb,wBAAIA,UAAU,aACZ,wBAAIA,UAAU,aACZ,kBAAC,IAAD,CACEoE,GAAG,IACHC,OAAK,EACLrE,UAAU,YACVsE,gBAAgB,qBAJlB,SASF,wBAAItE,UAAU,aACZ,kBAAC,IAAD,CACEoE,GAAG,UACHpE,UAAU,YACVsE,gBAAgB,qBAHlB,mBAWR,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,IACLF,OAAK,EACLG,UAAWlF,IAEb,kBAAC,IAAD,CAAUmF,KAAK,QAAQL,GAAG,MAC1B,kBAAC,IAAD,CACEG,KAAK,uBACLC,UAAW/B,IAEb,kBAAC,IAAD,CAAO+B,UAAWjF,QC9C5BmF,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7628814b.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Home = () => (\n  <h2>Home page</h2>\n);\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <h1>Page not found</h1>\n);\n","import React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PersonRow: React.FC<Props> = ({ people }) => {\n  const history = useHistory();\n  const { personName } = useParams();\n\n  return (\n    <>\n      {people.map(person => (\n        <tr\n          className={cn('personRow', {\n            personRow__active: person.slug === personName,\n          })}\n          key={person.id}\n          onClick={() => {\n            history.push({\n              pathname: `/people/${person.slug}`,\n            });\n          }}\n        >\n          <td\n            className={cn({\n              person__woman: person.sex === 'f',\n              person__man: person.sex === 'm',\n            })}\n          >\n            {person.name}\n          </td>\n          <td>{person.sex}</td>\n          <td>{person.born}</td>\n          <td>{person.died}</td>\n          <td\n            className={cn(\n              'person__mother', {\n                notFount: person.mother === 'NOT FOUND',\n              },\n            )}\n          >\n            {person.mother}\n          </td>\n          <td\n            className={cn(\n              'person__father', {\n                notFount: person.father === 'NOT FOUND',\n              },\n            )}\n          >\n            {person.father}\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n};\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nexport const InputFilter = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const searchParams = new URLSearchParams(location.search);\n  const query: string = searchParams.get('query') || '';\n  const [currentQuery, setCurrentQuery] = useState<string>(query);\n\n  const searchQueryWithDebounce = useCallback(debounce(history.push, 500), []);\n\n  const handleSearchChange = (event: { target: { value: string }}) => {\n    setCurrentQuery(event.target.value);\n    searchParams.set('query', event.target.value);\n    searchQueryWithDebounce({\n      search: searchParams.toString(),\n    });\n  };\n\n  useEffect(() => {\n    setCurrentQuery(query);\n  }, [query]);\n\n  return (\n    <>\n      <input\n        className=\"form-control\"\n        type=\"text\"\n        placeholder=\"Type Person Name, Father Name or Mother Name\"\n        value={currentQuery}\n        onChange={handleSearchChange}\n      />\n    </>\n  );\n};\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { RouteComponentProps, useHistory } from 'react-router-dom';\nimport { getPeople } from './api';\nimport { PersonRow } from './PersonRow';\nimport { InputFilter } from './InputFilter';\n\n\ntype Props = RouteComponentProps<{\n  location: string;\n}>;\n\nexport const PeopleTable: React.FC<Props> = ({ location }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const query = useMemo(() => searchParams.get('query'), [searchParams]) || '';\n  const sortBy = useMemo(() => searchParams.get('sortBy'), [searchParams] || '');\n  const sortOrder = useMemo(() => searchParams.get('sortOrder'), [searchParams] || '');\n  const tableHeads = [\n    'name',\n    'sex',\n    'born',\n    'died',\n    'mother',\n    'father',\n  ];\n\n  useEffect(() => {\n    getPeople().then(res => setPeople(\n      res.map((person, i) => ({\n        ...person,\n        id: i + 1,\n        father: person.fatherName ? person.fatherName : 'NOT FOUND',\n        mother: person.motherName ? person.motherName : 'NOT FOUND',\n      })),\n    ));\n  }, []);\n\n  const filterPeople = (peopleArr: Person[]) => {\n    const pattern = new RegExp(query, 'i');\n\n    return peopleArr\n      .filter(person => pattern.test(person.name + person.motherName + person.fatherName));\n  };\n\n\n  const preparedPeople = useMemo(() => filterPeople(people), [people, query]);\n\n  useMemo(() => {\n    switch (sortBy) {\n      case 'born':\n      case 'died':\n        preparedPeople.sort((a, b) => a[sortBy] - b[sortBy]);\n        break;\n      case 'name':\n      case 'sex':\n        preparedPeople.sort((a, b) => a[sortBy].localeCompare(b[sortBy]));\n        break;\n      default:\n    }\n  },\n  [preparedPeople, sortBy, sortOrder]);\n\n\n  const handlePeopleSort = (column: string) => {\n    if (column !== 'mother' && column !== 'father') {\n      if (sortBy === column && sortOrder === 'asc') {\n        searchParams.set('sortOrder', 'desc');\n      } else {\n        searchParams.set('sortOrder', 'asc');\n      }\n\n      searchParams.set('sortBy', column);\n      history.push({\n        search: searchParams.toString(),\n      });\n    }\n  };\n\n  useMemo(() => {\n    return sortOrder === 'desc' ? preparedPeople.reverse() : preparedPeople;\n  },\n  [preparedPeople, sortOrder]);\n\n  return (\n    <>\n      <h2>People Table</h2>\n      <InputFilter />\n      <table className=\"peopleTable\">\n        <thead className=\"table-success\">\n          <tr>\n            {tableHeads.map(item => (\n              <th\n                key={item}\n                onClick={() => handlePeopleSort(item)}\n              >\n                {item}\n                {item === sortBy && '*'}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <PersonRow people={preparedPeople} />\n        </tbody>\n      </table>\n    </>\n  );\n};\n","const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = (): Promise<Person[]> => {\n  return fetch(API_URL)\n    .then(res => res.json());\n};\n","import React from 'react';\nimport {\n  Route,\n  NavLink,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport './App.css';\nimport { Home } from './components/Home';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeopleTable } from './components/PeopleTable';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <header>\n        <nav className=\"nav\">\n          <ul className=\"nav__list\">\n            <li className=\"nav__item\">\n              <NavLink\n                to=\"/\"\n                exact\n                className=\"nav__link\"\n                activeClassName=\"nav__link--active\"\n              >\n                Home\n              </NavLink>\n            </li>\n            <li className=\"nav__item\">\n              <NavLink\n                to=\"/people\"\n                className=\"nav__link\"\n                activeClassName=\"nav__link--active\"\n              >\n                People Page\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <main>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            component={Home}\n          />\n          <Redirect from=\"/home\" to=\"/\" />\n          <Route\n            path=\"/people/:personName?\"\n            component={PeopleTable}\n          />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}